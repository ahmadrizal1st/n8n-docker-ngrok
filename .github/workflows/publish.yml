name: Publish NPM package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: # Manual trigger

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm install
      
      - name: Make CLI executable
        run: chmod +x bin/index.js
      
      - name: Basic validation
        run: |
          echo "🔍 Running basic validation..."
          
          # Test CLI help command
          echo "Testing CLI help..."
          node bin/index.js --help
          
          # Test CLI version command
          echo "Testing CLI version..."
          node bin/index.js --version
          
          # Check essential files
          echo "Checking essential files..."
          [ -f "bin/index.js" ] || { echo "❌ bin/index.js missing"; exit 1; }
          [ -d "bin/scripts" ] || { echo "❌ bin/scripts directory missing"; exit 1; }
          [ -d "templates" ] || { echo "❌ templates directory missing"; exit 1; }
          
          echo "✅ Basic validation passed"
      
      - name: Get version info
        id: version_info
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Version: $CURRENT_VERSION"
      
      - name: Publish to npm
        run: |
          echo "🚀 Publishing version ${{ steps.version_info.outputs.current_version }} to npm..."
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.version_info.outputs.current_version }}"
          name: "tunn8n v${{ steps.version_info.outputs.current_version }}"
          body: |
            ## 🚀 tunn8n CLI v${{ steps.version_info.outputs.current_version }}
            
            Automated release of tunn8n - n8n with Docker & Ngrok integration
            
            ### Features:
            - `tunn8n create <project>` - Create new n8n project
            - `tunn8n start` - Start docker services
            - `tunn8n stop` - Stop docker services  
            - `tunn8n status` - Check service status
            - `tunn8n debug` - Debug mode
            - `tunn8n init` - Initialize .env file
            
            ### Install:
            ```bash
            npm install -g tunn8n
            ```
          files: |
            README.md
            LICENSE
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Success notification
        run: |
          echo "🎉 Successfully published tunn8n v${{ steps.version_info.outputs.current_version }}"
          echo "📦 npm: https://www.npmjs.com/package/tunn8n"
          echo "🐙 GitHub: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.version_info.outputs.current_version }}"